pipeline {
    agent none

    environment {
        SONARQUBE = 'LocalSonarQube'
    }

    stages {
        stage('Checkout') {
            agent { label 'agent1' }
            steps {
                git branch: 'main', url: 'https://github.com/Shashwat-Manglam-Jain/Jenkins-projects.git'
                stash name: 'source', includes: 'node-app/**'
            }
        }

        stage('Install Dependencies') {
            agent { label 'agent1' }
            steps {
                unstash 'source'
                dir('node-app') {
                    sh 'npm install'
                }
                stash name: 'built', includes: 'node-app/**'
            }
        }

        stage('Parallel Build Tasks') {
            parallel {
                stage('Run Tests') {
                    agent { label 'agent2' }
                    steps {
                        unstash 'built'
                        dir('node-app') {
                            sh 'npm test'
                        }
                    }
                }

                stage('OWASP Dependency Check') {
                    agent { label 'agent3' }
                    steps {
                        unstash 'built'
                        dir('node-app') {
                            sh '''
                                curl -L -o dc.zip https://github.com/jeremylong/DependencyCheck/releases/download/v9.0.10/dependency-check-9.0.10-release.zip
                                unzip -q dc.zip -d dc
                                ./dc/dependency-check/bin/dependency-check.sh --project "NodeApp" --scan . --format "HTML" --out reports
                            '''
                            archiveArtifacts artifacts: 'node-app/reports/*'
                        }
                    }
                }
            }
        }

        stage('SonarQube Analysis') {
            agent { label 'agent1' }
            steps {
                unstash 'built'
                dir('node-app') {
                    withSonarQubeEnv("${SONARQUBE}") {
                        sh '''
                            sonar-scanner \
                              -Dsonar.projectKey=nodeapp \
                              -Dsonar.sources=. \
                              -Dsonar.exclusions=node_modules/** \
                              -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info || true
                        '''
                    }
                }
            }
        }
    }
}
